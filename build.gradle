plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.3'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'org.openapi.generator' version '7.0.1'
}

group = 'ru.neoflex.learning.creaditpipeline'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.liquibase:liquibase-core'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:postgresql'
}

tasks.named('test') {
    useJUnitPlatform()
}

openApiGenerate {
    generatorName.set("spring")
    inputSpec.set("$rootDir/src/main/resources/openapi/deal_api.yaml")
    outputDir.set("$buildDir/generated")
    apiPackage.set("ru.neoflex.learning.creaditpipeline.api")
    modelPackage.set("ru.neoflex.learning.creaditpipeline.model")
    configOptions.set([
            useSpringBoot3                : "true",
            interfaceOnly                 : "true",
            serializableModel             : "true",
            java8                         : "false",
            javaVersion                   : "17",
            useJakartaEe                  : "true",
            additionalModelTypeAnnotations: "@lombok.Builder @lombok.experimental.Accessors(chain = true) @lombok.NoArgsConstructor @lombok.AllArgsConstructor"
    ])
    typeMappings.set([
            double: "java.math.BigDecimal"
    ])
}

compileJava.dependsOn tasks.named("openApiGenerate")